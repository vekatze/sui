import {
  core.text {join, text-byte-length},
  this.entity.header {Header, header, show-header-list},
}

data response {
| Response(
    protocol-version: text,
    status-code: int,
    headers: list(header),
    body: text,
  )
}

define text-response(status-code: int, body: text) {
  let len on body = text-byte-length(body) in
  Response of {
    protocol-version = *"HTTP/1.1",
    status-code,
    headers = [Header(*"content-length", %ld(len))],
    body,
  }
}

define get-status-code-text(code: int): &text {
  match code {
  | 200 =>
    "OK"
  | 400 =>
    "Bad Request"
  | 500 =>
    "Internal Server Error"
  | _ =>
    "UNKNOWN"
  }
}

define show-response(r: response): text {
  let Response of {protocol-version, status-code, headers, body} = r in
  join([
    protocol-version,
    *" ",
    %ld(status-code),
    *" ",
    *get-status-code-text(status-code),
    *"\r\n",
    show-header-list(headers),
    *"\r\n",
    body,
  ])
}
